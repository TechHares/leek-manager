"""init

Revision ID: 35b47490ebe3
Revises: 
Create Date: 2025-08-15 16:25:28.447168

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '35b47490ebe3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('asset_snapshots',
    sa.Column('project_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False, comment='项目ID'),
    sa.Column('snapshot_time', sa.DateTime(), nullable=False, comment='快照时间'),
    sa.Column('activate_amount', sa.Numeric(precision=36, scale=18), nullable=False, comment='激活金额'),
    sa.Column('pnl', sa.Numeric(precision=36, scale=18), nullable=False, comment='盈亏'),
    sa.Column('friction', sa.Numeric(precision=36, scale=18), nullable=False, comment='摩擦成本'),
    sa.Column('fee', sa.Numeric(precision=36, scale=18), nullable=False, comment='手续费'),
    sa.Column('total_amount', sa.Numeric(precision=36, scale=18), nullable=False, comment='总金额'),
    sa.Column('virtual_pnl', sa.Numeric(precision=36, scale=18), nullable=False, comment='虚拟盈亏'),
    sa.Column('position_amount', sa.Integer(), nullable=False, comment='仓位数量'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_project_snapshot_time', 'asset_snapshots', ['project_id', 'snapshot_time'], unique=False)
    op.create_index(op.f('ix_asset_snapshots_created_at'), 'asset_snapshots', ['created_at'], unique=False)
    op.create_index(op.f('ix_asset_snapshots_id'), 'asset_snapshots', ['id'], unique=False)
    op.create_index(op.f('ix_asset_snapshots_project_id'), 'asset_snapshots', ['project_id'], unique=False)
    op.create_index(op.f('ix_asset_snapshots_snapshot_time'), 'asset_snapshots', ['snapshot_time'], unique=False)
    op.create_table('backtest_config',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('remark', sa.String(length=500), nullable=True),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('class_name', sa.String(length=300), nullable=False),
    sa.Column('params', sa.JSON(), nullable=True),
    sa.Column('extra', sa.JSON(), nullable=True),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_backtest_config_created_at'), 'backtest_config', ['created_at'], unique=False)
    op.create_index(op.f('ix_backtest_config_id'), 'backtest_config', ['id'], unique=False)
    op.create_index(op.f('ix_backtest_config_project_id'), 'backtest_config', ['project_id'], unique=False)
    op.create_table('backtest_tasks',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('progress', sa.Float(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('error', sa.String(length=2000), nullable=True),
    sa.Column('strategy_class', sa.String(length=512), nullable=True),
    sa.Column('data_config_id', sa.Integer(), nullable=True),
    sa.Column('cost_config_id', sa.Integer(), nullable=True),
    sa.Column('start', sa.String(length=32), nullable=True),
    sa.Column('end', sa.String(length=32), nullable=True),
    sa.Column('train_days', sa.Integer(), nullable=True),
    sa.Column('test_days', sa.Integer(), nullable=True),
    sa.Column('embargo_days', sa.Integer(), nullable=True),
    sa.Column('mode', sa.String(length=32), nullable=True),
    sa.Column('cv_splits', sa.Integer(), nullable=True),
    sa.Column('max_workers', sa.Integer(), nullable=True),
    sa.Column('symbols', sa.JSON(), nullable=True),
    sa.Column('timeframes', sa.JSON(), nullable=True),
    sa.Column('summary', sa.JSON(), nullable=True),
    sa.Column('windows', sa.JSON(), nullable=True),
    sa.Column('artifacts', sa.JSON(), nullable=True),
    sa.Column('windows_count', sa.Integer(), nullable=True),
    sa.Column('sharpe_median', sa.Float(), nullable=True),
    sa.Column('sharpe_p25', sa.Float(), nullable=True),
    sa.Column('mdd_median', sa.Float(), nullable=True),
    sa.Column('trades_median', sa.Float(), nullable=True),
    sa.Column('turnover_median', sa.Float(), nullable=True),
    sa.Column('pnl_median', sa.Float(), nullable=True),
    sa.Column('pass_thresholds', sa.Boolean(), nullable=True),
    sa.Column('win_rate', sa.Float(), nullable=True),
    sa.Column('trade_win_rate', sa.Float(), nullable=True),
    sa.Column('total_return', sa.Float(), nullable=True),
    sa.Column('annual_return', sa.Float(), nullable=True),
    sa.Column('total_trades', sa.Integer(), nullable=True),
    sa.Column('profit_factor', sa.Float(), nullable=True),
    sa.Column('win_loss_ratio', sa.Float(), nullable=True),
    sa.Column('avg_win', sa.Float(), nullable=True),
    sa.Column('avg_loss', sa.Float(), nullable=True),
    sa.Column('profit_sum', sa.Float(), nullable=True),
    sa.Column('loss_sum', sa.Float(), nullable=True),
    sa.Column('profit_count', sa.Integer(), nullable=True),
    sa.Column('loss_count', sa.Integer(), nullable=True),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_backtest_tasks_created_at'), 'backtest_tasks', ['created_at'], unique=False)
    op.create_index(op.f('ix_backtest_tasks_id'), 'backtest_tasks', ['id'], unique=False)
    op.create_index(op.f('ix_backtest_tasks_project_id'), 'backtest_tasks', ['project_id'], unique=False)
    op.create_table('balance_transactions',
    sa.Column('project_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False, comment='项目ID'),
    sa.Column('strategy_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='策略ID'),
    sa.Column('strategy_instance_id', sa.String(length=200), nullable=True, comment='策略实例ID'),
    sa.Column('position_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='仓位ID'),
    sa.Column('order_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='订单ID'),
    sa.Column('signal_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='信号ID'),
    sa.Column('executor_id', sa.String(length=64), nullable=True, comment='执行器ID'),
    sa.Column('asset_key', sa.String(length=64), nullable=False, comment='资产键值'),
    sa.Column('transaction_type', sa.Enum('FROZEN', 'UNFROZEN', 'DEPOSIT', 'WITHDRAW', 'TRADE', 'FEE', 'PNL', 'FUNDING', 'SETTLE', 'OTHER', name='transactiontype'), nullable=False, comment='流水类型'),
    sa.Column('amount', sa.Numeric(precision=36, scale=18), nullable=False, comment='流水金额'),
    sa.Column('balance_before', sa.Numeric(precision=36, scale=18), nullable=True, comment='变动前余额'),
    sa.Column('balance_after', sa.Numeric(precision=36, scale=18), nullable=True, comment='变动后余额'),
    sa.Column('description', sa.String(length=500), nullable=True, comment='流水描述'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_balance_transactions_created_at'), 'balance_transactions', ['created_at'], unique=False)
    op.create_index(op.f('ix_balance_transactions_executor_id'), 'balance_transactions', ['executor_id'], unique=False)
    op.create_index(op.f('ix_balance_transactions_id'), 'balance_transactions', ['id'], unique=False)
    op.create_index(op.f('ix_balance_transactions_order_id'), 'balance_transactions', ['order_id'], unique=False)
    op.create_index(op.f('ix_balance_transactions_position_id'), 'balance_transactions', ['position_id'], unique=False)
    op.create_index(op.f('ix_balance_transactions_project_id'), 'balance_transactions', ['project_id'], unique=False)
    op.create_index(op.f('ix_balance_transactions_signal_id'), 'balance_transactions', ['signal_id'], unique=False)
    op.create_index(op.f('ix_balance_transactions_strategy_id'), 'balance_transactions', ['strategy_id'], unique=False)
    op.create_index(op.f('ix_balance_transactions_strategy_instance_id'), 'balance_transactions', ['strategy_instance_id'], unique=False)
    op.create_table('datasources',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('class_name', sa.String(length=200), nullable=False),
    sa.Column('params', sa.JSON(), nullable=True),
    sa.Column('project_id', sa.BigInteger(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_datasources_created_at'), 'datasources', ['created_at'], unique=False)
    op.create_index(op.f('ix_datasources_id'), 'datasources', ['id'], unique=False)
    op.create_table('execution_orders',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('project_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('signal_id', sa.String(length=64), nullable=False),
    sa.Column('strategy_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('strategy_instant_id', sa.String(length=64), nullable=False),
    sa.Column('target_executor_id', sa.String(length=64), nullable=False),
    sa.Column('execution_assets', sa.JSON(), nullable=False),
    sa.Column('open_amount', sa.DECIMAL(precision=36, scale=20), nullable=False),
    sa.Column('open_ratio', sa.DECIMAL(precision=36, scale=20), nullable=False),
    sa.Column('extra', sa.JSON(), nullable=True),
    sa.Column('leverage', sa.DECIMAL(precision=12, scale=8), nullable=True),
    sa.Column('order_type', sa.Integer(), nullable=False),
    sa.Column('trade_type', sa.Integer(), nullable=False),
    sa.Column('trade_mode', sa.String(length=32), nullable=False),
    sa.Column('created_time', sa.DateTime(), nullable=False),
    sa.Column('actual_ratio', sa.DECIMAL(precision=36, scale=20), nullable=True),
    sa.Column('actual_amount', sa.DECIMAL(precision=36, scale=20), nullable=True),
    sa.Column('actual_pnl', sa.DECIMAL(precision=36, scale=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_execution_orders_created_at'), 'execution_orders', ['created_at'], unique=False)
    op.create_index(op.f('ix_execution_orders_id'), 'execution_orders', ['id'], unique=False)
    op.create_table('executors',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('class_name', sa.String(length=200), nullable=False),
    sa.Column('params', sa.JSON(), nullable=True),
    sa.Column('project_id', sa.BigInteger(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_executors_created_at'), 'executors', ['created_at'], unique=False)
    op.create_index(op.f('ix_executors_id'), 'executors', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('position_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='仓位ID'),
    sa.Column('exec_order_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False, comment='执行订单ID'),
    sa.Column('signal_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False, comment='信号ID'),
    sa.Column('strategy_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False, comment='策略ID'),
    sa.Column('project_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('strategy_instant_id', sa.String(length=200), nullable=False, comment='策略实例ID'),
    sa.Column('order_status', sa.String(length=32), nullable=False, comment='订单状态'),
    sa.Column('order_time', sa.DateTime(), nullable=False, comment='订单时间'),
    sa.Column('ratio', sa.DECIMAL(precision=36, scale=20), nullable=True, comment='仓位比例'),
    sa.Column('symbol', sa.String(length=32), nullable=False, comment='交易标的'),
    sa.Column('quote_currency', sa.String(length=16), nullable=False, comment='计价货币'),
    sa.Column('ins_type', sa.Integer(), nullable=False, comment='合约/现货类型'),
    sa.Column('asset_type', sa.String(length=16), nullable=False, comment='资产类型'),
    sa.Column('side', sa.String(length=8), nullable=False, comment='交易方向'),
    sa.Column('is_open', sa.Boolean(), nullable=False, comment='是否开仓'),
    sa.Column('is_fake', sa.Boolean(), nullable=False, comment='是否虚拟仓位'),
    sa.Column('order_amount', sa.DECIMAL(precision=36, scale=20), nullable=False, comment='订单金额'),
    sa.Column('order_price', sa.DECIMAL(precision=36, scale=20), nullable=False, comment='订单价格'),
    sa.Column('order_type', sa.String(length=16), nullable=True, comment='订单类型'),
    sa.Column('settle_amount', sa.DECIMAL(precision=36, scale=20), nullable=True, comment='实际成交金额'),
    sa.Column('execution_price', sa.DECIMAL(precision=36, scale=20), nullable=True, comment='实际成交价格'),
    sa.Column('sz', sa.DECIMAL(precision=36, scale=20), nullable=True, comment='订单数量'),
    sa.Column('sz_value', sa.DECIMAL(precision=36, scale=20), nullable=True, comment='订单数量价值'),
    sa.Column('fee', sa.DECIMAL(precision=36, scale=20), nullable=True, comment='手续费'),
    sa.Column('pnl', sa.DECIMAL(precision=36, scale=20), nullable=True, comment='已实现盈亏'),
    sa.Column('unrealized_pnl', sa.DECIMAL(precision=36, scale=20), nullable=True, comment='未实现盈亏'),
    sa.Column('finish_time', sa.DateTime(), nullable=True, comment='完成时间'),
    sa.Column('friction', sa.DECIMAL(precision=36, scale=20), nullable=False, comment='摩擦成本'),
    sa.Column('leverage', sa.DECIMAL(precision=12, scale=8), nullable=False, comment='杠杆倍数'),
    sa.Column('executor_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='执行ID'),
    sa.Column('trade_mode', sa.String(length=16), nullable=True, comment='交易模式'),
    sa.Column('extra', sa.JSON(), nullable=True, comment='附加信息'),
    sa.Column('market_order_id', sa.String(length=200), nullable=True, comment='市场订单ID'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_created_at'), 'orders', ['created_at'], unique=False)
    op.create_index(op.f('ix_orders_exec_order_id'), 'orders', ['exec_order_id'], unique=False)
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_index(op.f('ix_orders_position_id'), 'orders', ['position_id'], unique=False)
    op.create_index(op.f('ix_orders_project_id'), 'orders', ['project_id'], unique=False)
    op.create_index(op.f('ix_orders_signal_id'), 'orders', ['signal_id'], unique=False)
    op.create_index(op.f('ix_orders_strategy_id'), 'orders', ['strategy_id'], unique=False)
    op.create_index(op.f('ix_orders_strategy_instant_id'), 'orders', ['strategy_instant_id'], unique=False)
    op.create_table('positions',
    sa.Column('strategy_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False, comment='策略ID'),
    sa.Column('strategy_instance_id', sa.String(length=200), nullable=False, comment='策略实例ID'),
    sa.Column('project_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('symbol', sa.String(length=32), nullable=False, comment='交易标的'),
    sa.Column('quote_currency', sa.String(length=16), nullable=False, comment='计价货币'),
    sa.Column('ins_type', sa.String(length=16), nullable=False, comment='合约/现货类型'),
    sa.Column('asset_type', sa.String(length=16), nullable=False, comment='资产类型'),
    sa.Column('side', sa.String(length=8), nullable=False, comment='仓位方向'),
    sa.Column('cost_price', sa.Numeric(precision=36, scale=18), nullable=False, comment='开仓成本价'),
    sa.Column('close_price', sa.Numeric(precision=36, scale=18), nullable=True, comment='平仓成本价'),
    sa.Column('current_price', sa.Numeric(precision=36, scale=18), nullable=True, comment='当前价格'),
    sa.Column('amount', sa.Numeric(precision=36, scale=18), nullable=False, comment='仓位数量'),
    sa.Column('ratio', sa.Numeric(precision=36, scale=18), nullable=False, comment='占资金比例'),
    sa.Column('sz', sa.Numeric(precision=36, scale=18), nullable=True, comment='仓位大小'),
    sa.Column('executor_sz', sa.JSON(), nullable=True, comment='执行器仓位大小'),
    sa.Column('max_sz', sa.Numeric(precision=36, scale=18), nullable=True, comment='最大仓位大小'),
    sa.Column('max_amount', sa.Numeric(precision=36, scale=18), nullable=True, comment='最大价值'),
    sa.Column('total_amount', sa.Numeric(precision=36, scale=18), nullable=True, comment='累计价值'),
    sa.Column('total_sz', sa.Numeric(precision=36, scale=18), nullable=True, comment='累计仓位数量'),
    sa.Column('executor_id', sa.String(length=64), nullable=True, comment='执行器ID'),
    sa.Column('is_fake', sa.Boolean(), nullable=True, comment='是否是假仓位'),
    sa.Column('pnl', sa.Numeric(precision=36, scale=18), nullable=False, comment='盈亏'),
    sa.Column('fee', sa.Numeric(precision=36, scale=18), nullable=False, comment='手续费'),
    sa.Column('friction', sa.Numeric(precision=36, scale=18), nullable=False, comment='摩擦成本'),
    sa.Column('leverage', sa.Numeric(precision=36, scale=18), nullable=False, comment='杠杆倍数'),
    sa.Column('open_time', sa.DateTime(), nullable=False, comment='开仓时间'),
    sa.Column('close_time', sa.DateTime(), nullable=True, comment='平仓时间'),
    sa.Column('is_closed', sa.Boolean(), nullable=True, comment='是否已平仓'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_positions_created_at'), 'positions', ['created_at'], unique=False)
    op.create_index(op.f('ix_positions_executor_id'), 'positions', ['executor_id'], unique=False)
    op.create_index(op.f('ix_positions_id'), 'positions', ['id'], unique=False)
    op.create_index(op.f('ix_positions_project_id'), 'positions', ['project_id'], unique=False)
    op.create_index(op.f('ix_positions_strategy_id'), 'positions', ['strategy_id'], unique=False)
    op.create_index(op.f('ix_positions_strategy_instance_id'), 'positions', ['strategy_instance_id'], unique=False)
    op.create_table('project_configs',
    sa.Column('project_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('log_alarm', sa.Boolean(), nullable=True),
    sa.Column('log_level', sa.String(length=20), nullable=True),
    sa.Column('log_format', sa.String(length=10), nullable=True),
    sa.Column('alert_methods', sa.String(length=200), nullable=True),
    sa.Column('alert_config', sa.JSON(), nullable=True),
    sa.Column('mount_dirs', sa.JSON(), nullable=True),
    sa.Column('position_setting', sa.JSON(), nullable=True),
    sa.Column('position_data', sa.JSON(), nullable=True),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_configs_created_at'), 'project_configs', ['created_at'], unique=False)
    op.create_index(op.f('ix_project_configs_id'), 'project_configs', ['id'], unique=False)
    op.create_index(op.f('ix_project_configs_project_id'), 'project_configs', ['project_id'], unique=True)
    op.create_table('projects',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('created_by', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('engine_info', sa.JSON(), nullable=True),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_created_at'), 'projects', ['created_at'], unique=False)
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_table('roles',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_created_at'), 'roles', ['created_at'], unique=False)
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('signals',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('project_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('data_source_instance_id', sa.JSON(), nullable=True),
    sa.Column('data_source_class_name', sa.String(length=200), nullable=False),
    sa.Column('strategy_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('strategy_instance_id', sa.String(length=200), nullable=False),
    sa.Column('strategy_class_name', sa.String(length=200), nullable=False),
    sa.Column('signal_time', sa.DateTime(), nullable=False),
    sa.Column('assets', sa.JSON(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('extra', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_signals_id'), 'signals', ['id'], unique=False)
    op.create_index(op.f('ix_signals_project_id'), 'signals', ['project_id'], unique=False)
    op.create_index(op.f('ix_signals_signal_time'), 'signals', ['signal_time'], unique=False)
    op.create_index(op.f('ix_signals_strategy_id'), 'signals', ['strategy_id'], unique=False)
    op.create_table('strategies',
    sa.Column('data_source_config', sa.JSON(), nullable=True),
    sa.Column('position_config', sa.JSON(), nullable=True),
    sa.Column('enter_strategy_class_name', sa.String(length=200), nullable=False),
    sa.Column('enter_strategy_config', sa.JSON(), nullable=True),
    sa.Column('exit_strategy_class_name', sa.String(length=200), nullable=False),
    sa.Column('exit_strategy_config', sa.JSON(), nullable=True),
    sa.Column('risk_policies', sa.JSON(), nullable=True),
    sa.Column('info_fabricator_configs', sa.JSON(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('class_name', sa.String(length=200), nullable=False),
    sa.Column('params', sa.JSON(), nullable=True),
    sa.Column('project_id', sa.BigInteger(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_strategies_id'), 'strategies', ['id'], unique=False)
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('hashed_password', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('role_ids', sa.JSON(), nullable=True),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_strategies_id'), table_name='strategies')
    op.drop_table('strategies')
    op.drop_index(op.f('ix_signals_strategy_id'), table_name='signals')
    op.drop_index(op.f('ix_signals_signal_time'), table_name='signals')
    op.drop_index(op.f('ix_signals_project_id'), table_name='signals')
    op.drop_index(op.f('ix_signals_id'), table_name='signals')
    op.drop_table('signals')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_index(op.f('ix_roles_created_at'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_created_at'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_project_configs_project_id'), table_name='project_configs')
    op.drop_index(op.f('ix_project_configs_id'), table_name='project_configs')
    op.drop_index(op.f('ix_project_configs_created_at'), table_name='project_configs')
    op.drop_table('project_configs')
    op.drop_index(op.f('ix_positions_strategy_instance_id'), table_name='positions')
    op.drop_index(op.f('ix_positions_strategy_id'), table_name='positions')
    op.drop_index(op.f('ix_positions_project_id'), table_name='positions')
    op.drop_index(op.f('ix_positions_id'), table_name='positions')
    op.drop_index(op.f('ix_positions_executor_id'), table_name='positions')
    op.drop_index(op.f('ix_positions_created_at'), table_name='positions')
    op.drop_table('positions')
    op.drop_index(op.f('ix_orders_strategy_instant_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_strategy_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_signal_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_project_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_position_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_exec_order_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_created_at'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_executors_id'), table_name='executors')
    op.drop_index(op.f('ix_executors_created_at'), table_name='executors')
    op.drop_table('executors')
    op.drop_index(op.f('ix_execution_orders_id'), table_name='execution_orders')
    op.drop_index(op.f('ix_execution_orders_created_at'), table_name='execution_orders')
    op.drop_table('execution_orders')
    op.drop_index(op.f('ix_datasources_id'), table_name='datasources')
    op.drop_index(op.f('ix_datasources_created_at'), table_name='datasources')
    op.drop_table('datasources')
    op.drop_index(op.f('ix_balance_transactions_strategy_instance_id'), table_name='balance_transactions')
    op.drop_index(op.f('ix_balance_transactions_strategy_id'), table_name='balance_transactions')
    op.drop_index(op.f('ix_balance_transactions_signal_id'), table_name='balance_transactions')
    op.drop_index(op.f('ix_balance_transactions_project_id'), table_name='balance_transactions')
    op.drop_index(op.f('ix_balance_transactions_position_id'), table_name='balance_transactions')
    op.drop_index(op.f('ix_balance_transactions_order_id'), table_name='balance_transactions')
    op.drop_index(op.f('ix_balance_transactions_id'), table_name='balance_transactions')
    op.drop_index(op.f('ix_balance_transactions_executor_id'), table_name='balance_transactions')
    op.drop_index(op.f('ix_balance_transactions_created_at'), table_name='balance_transactions')
    op.drop_table('balance_transactions')
    op.drop_index(op.f('ix_backtest_tasks_project_id'), table_name='backtest_tasks')
    op.drop_index(op.f('ix_backtest_tasks_id'), table_name='backtest_tasks')
    op.drop_index(op.f('ix_backtest_tasks_created_at'), table_name='backtest_tasks')
    op.drop_table('backtest_tasks')
    op.drop_index(op.f('ix_backtest_config_project_id'), table_name='backtest_config')
    op.drop_index(op.f('ix_backtest_config_id'), table_name='backtest_config')
    op.drop_index(op.f('ix_backtest_config_created_at'), table_name='backtest_config')
    op.drop_table('backtest_config')
    op.drop_index(op.f('ix_asset_snapshots_snapshot_time'), table_name='asset_snapshots')
    op.drop_index(op.f('ix_asset_snapshots_project_id'), table_name='asset_snapshots')
    op.drop_index(op.f('ix_asset_snapshots_id'), table_name='asset_snapshots')
    op.drop_index(op.f('ix_asset_snapshots_created_at'), table_name='asset_snapshots')
    op.drop_index('idx_project_snapshot_time', table_name='asset_snapshots')
    op.drop_table('asset_snapshots')
    # ### end Alembic commands ###
